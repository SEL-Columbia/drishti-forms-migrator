['java', 'idea', 'application'].each({ apply plugin: it })

project.ext {
    dropwizardVersion = '0.6.2'
    configFile = 'content-migrator.yml'
}

mainClassName = 'app.ApplicationService'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        url "http://repository.codehaus.org/org/codehaus"
    }
}

dependencies {
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-jdbi', version: dropwizardVersion
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-migrations', version: dropwizardVersion
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-testing', version: dropwizardVersion
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-hibernate', version: dropwizardVersion
    compile group: 'org.codehaus.jackson', name: 'jackson-core-lgpl', version: '1.9.10'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.14.2'
    compile fileTree('lib')
    runtime group: 'postgresql', name: 'postgresql', version: '9.1-901.jdbc4'

    testCompile 'junit:junit:4.8.2'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

run {
    args 'server', configFile
}

jar {
    manifest {
        attributes "Main-Class" : mainClassName
    }

    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }
}

task migrations(dependsOn: 'jar') << {
    javaexec {
        main = '-jar'
        args = [jar.archivePath, 'db', 'migrate', configFile]
    }
}

task cleanDb(dependsOn: 'jar') << {
    javaexec {
        main = '-jar'
        args = [jar.archivePath, 'db', 'drop-all', '--confirm-delete-everything', configFile]
    }
}